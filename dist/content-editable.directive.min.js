function contentEditable($log,$sce,$compile,$window){function _link(scope,elem,attrs,ngModel){return ngModel?(scope.ngModel||ngModel.$setViewValue(elem.html()),ngModel.$render=function(){elem.html(ngModel.$viewValue||elem.html())},elem.bind("click",function(e){e.preventDefault(),elem.attr("contenteditable","true"),elem[0].focus()}),elem.bind("focus",function(e){if(ngModel.$valid=!0,attrs.focusSelect){var range=$window.document.createRange();range.selectNodeContents(elem[0]),$window.getSelection().addRange(range)}if(attrs.renderHtml){var content=elem.html();elem[0].textContent=content}}),elem.bind("blur",function(){var html;elem.attr("contenteditable","false"),attrs.renderHtml&&ngModel.$valid?(html=elem[0].textContent.replace(/\u00a0/g," "),elem.html(html)):html=elem.html().replace(/<div>/g,"").replace(/&nbsp;/g," ").replace(/<\/div>/g,""),html!=ngModel.$modelValue&&scope.editCallback&&scope.editCallback(html,elem),ngModel.$setViewValue(html)}),void elem.bind("keydown",function(e){return 9==e.which?elem[0].blur():27==e.which?(ngModel.$rollbackViewValue(),ngModel.$valid=!1,elem[0].blur()):13==e.which&&attrs.singleLine?elem[0].blur():void 0})):void $log.warn("Error: ngModel is required in elem: ",elem)}var directive={restrict:"A",require:"?ngModel",scope:{editCallback:"=",ngModel:"="},link:_link};return directive}angular.module("app").directive("contentEditable",contentEditable),contentEditable.$inject=["$log","$sce","$compile","$window"];